
/* 회원번호, 아이디, 이름, 비밀번호, 전화번호, 닉네임, 이메일, 주소, 생년월일, 성별, 추천인 아이디 */
CREATE TABLE TBL_USER(
	USER_ID NUMBER CONSTRAINT PK_USER PRIMARY KEY,
	USER_IDENTIFICATION VARCHAR2(500) CONSTRAINT UK_USER_IDENTIFICATION UNIQUE NOT NULL,
	USER_NAME VARCHAR2(500) NOT NULL,
	USER_PASSWORD VARCHAR2(500) NOT NULL,
	USER_PHONE VARCHAR2(100) NOT NULL,
	USER_NICKNAME VARCHAR2(500),
	USER_EMAIL VARCHAR2(100) CONSTRAINT UK_USER_EMAIL UNIQUE NOT NULL,
	USER_ADDRESS VARCHAR2(500) NOT NULL,
	USER_BIRTH DATE,
	USER_GENDER CHAR(1) DEFAULT 'N' CONSTRAINT CHECK_USER_GENDER CHECK(USER_GENDER IN('M', 'W', 'N')),
	USER_RECOMMENDER_ID VARCHAR2(500)
);

CREATE SEQUENCE SEQ_USER;

ALTER TABLE TBL_USER ADD USER_RECOMMEND_COUNT NUMBER;
ALTER TABLE TBL_USER DROP COLUMN USER_RECOMMEND_COUNT;

CREATE TABLE TBL_RECOMMEND(
	USER_ID NUMBER,
	RECOMMEND_COUNT NUMBER DEFAULT 0,
	CONSTRAINT FK_RECOMMEND FOREIGN KEY(USER_ID) REFERENCES TBL_USER(USER_ID),
	CONSTRAINT PK_RECOMMEND PRIMARY KEY(USER_ID)
);

DROP TABLE TBL_RECOMMEND ;

ALTER TABLE TBL_RECOMMEND ADD USER_IDENTIFICATION VARCHAR2(500);
ALTER TABLE TBL_RECOMMEND DROP CONSTRAINT FK_RECOMMEND;
ALTER TABLE TBL_RECOMMEND ADD CONSTRAINT FK_RECOMMEND FOREIGN KEY(USER_ID) REFERENCES TBL_USER(USER_ID)
ON DELETE CASCADE;

CREATE OR REPLACE TRIGGER TRG_RECOMMEND 
AFTER
INSERT ON TBL_USER
FOR EACH ROW
DECLARE
BEGIN
   INSERT INTO TBL_RECOMMEND (USER_ID, RECOMMEND_COUNT) 
   VALUES(:NEW.USER_ID, 0);
END;

DROP TRIGGER TRG_RECOMMEND;

INSERT INTO TBL_USER
(USER_ID, USER_IDENTIFICATION, USER_NAME, USER_PASSWORD, USER_PHONE, USER_NICKNAME, USER_EMAIL, USER_ADDRESS, USER_BIRTH, USER_GENDER, USER_RECOMMENDER_ID)
VALUES(SEQ_USER.NEXTVAL, 'kmg3444', '강민구', '1234', '01034442331', '강민구123', 'kmg3444@gmail.com', '경기 의왕시', '1998-01-30', 'M' , NULL);

UPDATE HR.TBL_USER
SET USER_ID=0, USER_NAME='', USER_PASSWORD='', USER_PHONE='', USER_NICKNAME='', USER_EMAIL='', USER_ADDRESS='', USER_BIRTH='', USER_GENDER='N' , USER_RECOMMENDER_ID=''
WHERE USER_IDENTIFICATION='';

SELECT USER_ID 
FROM TBL_USER 
WHERE USER_RECOMMENDER_ID = 'kmg2331';

SELECT COUNT(USER_ID)
FROM TBL_USER 
WHERE USER_RECOMMENDER_ID = 'kmg2222';

UPDATE TBL_USER 
SET USER_RECOMMEND_COUNT =
(
	SELECT COUNT(USER_ID)
	FROM TBL_USER
	WHERE USER_RECOMMENDER_ID = 'kmg2331'
)

CREATE SEQUENCE SEQ_FOLLOW;

CREATE TABLE TBL_USER_FOLLOW(
	FOLLOW_ID NUMBER CONSTRAINT PK_FOLLOW PRIMARY KEY,
	FOLLOW_DATE DATE DEFAULT SYSDATE,
	USER_ID NUMBER,
	FOLLOWER_ID NUMBER,
	CONSTRAINT FK_FOLLOW_USER FOREIGN KEY(USER_ID) REFERENCES TBL_USER(USER_ID),
	CONSTRAINT FK_FOLLOW_FOLLOWER FOREIGN KEY(FOLLOWER_ID) REFERENCES TBL_USER(USER_ID)
);

DROP TABLE TBL_USER_FOLLOW ;

SELECT F.USER_ID, F.FOLLOW_DATE, F.FOLLOWER_ID, U.USER_IDENTIFICATION, U.USER_NAME, U.USER_PASSWORD, U.USER_PHONE, U.USER_NICKNAME, U.USER_EMAIL, U.USER_ADDRESS, U.USER_BIRTH, U.USER_GENDER, U.USER_RECOMMENDER_ID FROM TBL_USER_FOLLOW F JOIN TBL_USER U ON F.USER_ID = U.USER_ID ;

SELECT USER_ID, USER_IDENTIFICATION, USER_NAME, USER_PASSWORD, USER_PHONE, USER_NICKNAME, USER_EMAIL, USER_ADDRESS, USER_BIRTH, USER_GENDER, USER_RECOMMENDER_ID FROM TBL_USER WHERE USER_ID IN 
(
	SELECT FOLLOWER_ID 	FROM TBL_USER_FOLLOW 	WHERE USER_ID = 49 );

